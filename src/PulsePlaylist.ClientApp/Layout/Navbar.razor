@using PulsePlaylist.ClientApp.Services.Navigation

<MudPaper Elevation="1" Square="true">
    <MudToolBar Class="gap-2" Style="height:50px">
        <MudButton StartIcon="@Icons.Material.Filled.Home" Href="/" Variant="Variant.Text">@L["Home"]</MudButton>
        @foreach (var item in Menus)
        {
            @if (item.SpecialMenu)
            {
                <MudMenu Color="Color.Inherit"
                         PopoverClass="layout-menu-shadow"
                         StartIcon="@item.StartIcon"
                         Variant="Variant.Text" Class="mx-1 px-3"
                         ListClass="d-flex px-4 pb-2 appbar-special-menu"
                         LockScroll="true" Label="@L[item.Label]"
                         EndIcon="@item.EndIcon"
                         AnchorOrigin="Origin.BottomCenter"
                         TransformOrigin="Origin.TopCenter">

                    @foreach (var sub in item.SubItems)
                    {
                        <MudList T="string">
                            <MudListSubheader Class="pt-4 pb-2">
                                @L[sub.Label]
                            </MudListSubheader>
                            @if (sub.SubItems.All(x => x.Status == PageStatus.ComingSoon))
                            {
                                <MudOverlay Visible="true" LightBackground="true" Absolute="true" Class="layout-menu-shadow" />
                            }
                            @foreach (var nav in sub.SubItems)
                            {
                                @if (nav.Status == PageStatus.ComingSoon)
                                {
                                    <MudListItem>
                                        <MudBadge Class="d-flex mr-20" Origin="Origin.CenterRight" Content="@_badgeTextSoon" Color="Color.Info" Overlap="true" BadgeClass="ml-5">
                                            <MudText>@L[nav.Label]</MudText>
                                        </MudBadge>
                                        <MudText Typo="Typo.body2">@L[nav.Description]</MudText>
                                    </MudListItem>
                                }
                                else if (nav.Status == PageStatus.New)
                                {
                                    <MudListItem Href="@nav.Href">
                                        <MudBadge Class="d-flex mr-20" Origin="Origin.CenterRight" Content="@_badgeTextNew" Color="Color.Success" Overlap="true" BadgeClass="ml-5">
                                            <MudText>@L[nav.Label]</MudText>
                                        </MudBadge>
                                        <MudText Typo="Typo.body2">@L[nav.Description]</MudText>
                                    </MudListItem>
                                }
                                else
                                {
                                    <MudListItem Href="@nav.Href" Disabled="@(string.IsNullOrEmpty(nav.Href))">
                                        <div class="d-flex">
                                        <MudText Typo="Typo.body1" Color="@(string.IsNullOrEmpty(nav.Href)?Color.Default:Color.Primary)">@L[nav.Label]</MudText>
                                        </div>
                                        <MudText Typo="Typo.body2">@L[nav.Description]</MudText>
                                    </MudListItem>
                                }

                            }
                        </MudList>
                    }
                </MudMenu>
            }
            else
            {
                <MudMenu AnchorOrigin="Origin.BottomLeft" Label="@L[item.Label]" StartIcon="@item.StartIcon" EndIcon="@item.EndIcon">
                    @foreach (var sub in item.SubItems)
                    {
                        <MudMenuItem>@L[sub.Label]</MudMenuItem>
                    }
                </MudMenu>
            }
        }

        <MudSpacer />
        <OfflineSyncStatus></OfflineSyncStatus>
    </MudToolBar>
</MudPaper>

@code {
    private string _badgeTextSoon = "coming soon";
    private string _badgeTextNew = "new";
    public List<MenuItem> Menus => NavbarMenu.Default;
}
